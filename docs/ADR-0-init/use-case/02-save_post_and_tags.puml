@startuml save_post_and_tags
actor User
participant "Telegram" as Telegram
participant "Mini-app Frontend" as Frontend
participant "Telegram Bot" as Bot
participant "Envoy Proxy" as Envoy
participant "NATS JetStream" as NATS
participant "Web Backend" as Backend
participant "PostgreSQL" as DB

User -> Telegram : Forwards message to bot
Telegram -> Bot : Delivers forwarded message
Bot -> Envoy : gRPC GetRecentTags(user_id)
Envoy -> Backend : gRPC GetRecentTags(user_id)
Backend -> DB : SELECT tags FROM recent_tags WHERE user_id = ...
DB --> Backend : recent_tags[]
Backend --> Envoy : recent_tags[]
Envoy --> Bot : recent_tags[]
Bot -> Telegram : Show recent tags + [Other tags] button

alt User chooses tags inside Telegram
    User -> Telegram : Selects tag buttons
    Telegram -> Bot : Sends message
    Bot -> NATS : Publish "tags_selected" event (post_id, tag_ids, user_id)
    NATS -> Backend : Consumes "tags_selected" event
    Backend -> DB : Saves recent tags

else User clicks "Other tags" â†’ opens Mini-app
    User -> Telegram : Clicks "Other tags"
    Telegram -> Frontend : Open mini-app WebView
    User -> Frontend : Selects tags in UI
    Frontend -> Backend : POST /posts/:id/tags
    Backend -> DB : INSERT tag relations, UPDATE recent_tags
    DB --> Backend : OK
    Backend --> Frontend : 200 OK
end
@enduml
